name: MockServer .NET Client

on:
  workflow_dispatch:
  push:

env:
  PROJECT_NAME: 'MockServerClientNet'
  NUPKG_OUTPUT: ${{ github.workspace }}/nupkg

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # 4.1.7

      - name: Setup .NET
        uses: actions/setup-dotnet@6bd8b7f7774af54e05809fcc5431931b3eb1ddee # 4.0.1
        with:
          dotnet-version: 8.x.x

      - name: Build
        run: dotnet build

      - name: Tests
        run: dotnet test

  release:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.RELEASE_APP_ID }}
          private_key: ${{ secrets.RELEASE_APP_KEY }}

      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # 4.1.7
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}
          persist-credentials: false

      - name: Setup .NET ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@6bd8b7f7774af54e05809fcc5431931b3eb1ddee # 4.0.1
        with:
          dotnet-version: 8.x.x

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Setup semantic-release
        run: npm install -g semantic-release @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/github @semantic-release/git @semantic-release/exec -D
        
      - name: Release
        id: release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: Publish
        if: ${{ steps.release.outputs.new_release_version }}
        run: |
          dotnet clean
          dotnet pack src/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj -c Release -o ${{ env.NUPKG_OUTPUT }}
          dotnet nuget push ${{ env.NUPKG_OUTPUT }}/*.nupkg -k ${{ secrets.NUGET_API_KEY }}
